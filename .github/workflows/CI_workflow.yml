name: CI_workflow
on:
  push:
    branches:
      - master
    tags:
      - v*
permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: EsraaShaabanElsayed/hive-app
  IMAGE_TAG: 2.4.8
  SENSOR_IDS: '["5eba5fbad46fb8001b799786", "5e60cf5557703e001bdae7f8", "5eb99cacd46fb8001b2ce04c"]'

jobs:
  linting_job:
    runs-on: ubuntu-24.04
    permissions:
      statuses: write

    steps:
      - name: checkout step
        uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the list of files that changed across commits
          fetch-depth: 0

      - name: Create .env file
        env:
          SENSOR_IDS: ${{ env.SENSOR_IDS }}
        run: |
          echo "SENSOR_IDS='${SENSOR_IDS}'" > .env
          cat .env

      - name: Super-linter
        uses: super-linter/super-linter@v7.2.1
        env:
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_and_push_docker_image:
    runs-on: ubuntu-24.04
    steps:
      - name: checkout step
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  unit_testing_job:
    runs-on: ubuntu-24.04
    steps:
      - name: checkout step
        uses: actions/checkout@v4
      - name: Create .env file
        env:
          SENSOR_IDS: ${{ env.SENSOR_IDS }}
        run: |
          echo "SENSOR_IDS='${SENSOR_IDS}'" > .env
          cat .env

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          pytest  temperture_api_test.py version_api_test.py

  call_version_api_job:
    runs-on: ubuntu-24.04
    steps:
      - name: checkout step
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Start application
        run: |
          python main.py &
           sleep 5
      - name: Call version API
        run: |
          curl -X GET http://127.0.0.1:5000/version
  terrascan_job:
    runs-on: ubuntu-latest
    name: terrascan-action
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run Terrascan
        id: terrascan
        uses: tenable/terrascan-action@main
        with:
          iac_type: k8s
          iac_dir: kubernetes

  integration_testing_job:
    runs-on: ubuntu-24.04
    steps:
      - name: checkout step
        uses: actions/checkout@v4
      - name: Create .env file
        env:
          SENSOR_IDS: ${{ env.SENSOR_IDS }}
        run: |
          echo "SENSOR_IDS='${SENSOR_IDS}'" > .env
          cat .env

      - name: Set_up_Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.12
      - name: Install_dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run_tests
        run: |
          pytest test_integration.py
